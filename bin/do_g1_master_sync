#!/bin/bash -l
pushd `cat ~/.markutils/m1`

echo Chrome: fetch
if ! git fetch; then
  exit
fi

git remote prune origin

if test `git branch | grep ^* | cut -c 3-` = master; then
  echo Chrome: reset --hard master to origin/master
  if ! git reset --hard origin/master; then
      exit
  fi
else
  echo Chrome: reset master to origin/master
  if ! git branch -f master origin/master; then
    exit
  fi
  echo Chrome: checkout master
  if ! git checkout master; then
    echo Failed to checkout master
    exit
  fi

fi

# WebKit
pushd third_party/WebKit
echo WebKit: fetch
if ! git fetch origin; then
    exit
fi

git remote prune origin
if test -d .git/svn; then
git svn fetch
fi

if test `git branch | grep ^* | cut -c 3-` = master; then
  echo WebKit: reset --hard master to origin/master
  if ! git reset --hard origin/master; then
    exit
  fi
else
  echo WebKit: force branch master to origin/master
  if ! git branch -f master origin/master; then
    exit
  fi
fi


popd

echo WebKit: update gclient to deps
./tools/sync-webkit-git.py

# checkout gclient on webkit
pushd third_party/WebKit
echo WebKit: checkout gclient
git checkout gclient
popd

echo gclient sync
if test "x$OSTYPE" != "xcygwin"; then
gclient sync -j16
else
gclient sync
fi

MAKE_TYPE=`cat ~/.markutils/g1_make_type`
if [[ "$MAKE_TYPE" == *Debug* ]]; then
  gyp_debug
elif [[ "$MAKE_TYPE" == *Release* ]]; then
  FOUND=1
  gyp_release
else
  echo Could not figure out your build type. Did not run gyp!
fi

# all done :)
echo You still need to restore and rebase your active branch
popd
