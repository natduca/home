#!/bin/sh
pushd `cat ~/.markutils/m1`

echo Chrome: fetch
if ! git fetch; then
  exit
fi

git remote prune origin

if test `git branch | grep ^* | cut -c 3-` = trunk; then
  echo Chrome: reset --hard trunk to origin/trunk
  if ! git reset --hard origin/trunk; then
      exit
  fi
else
  echo Chrome: reset trunk to origin/trunk
  if ! git branch -f trunk origin/trunk; then
    exit
  fi
  echo Chrome: checkout trunk
  if ! git checkout trunk; then
    echo Failed to checkout trunk.
    exit
  fi

fi

# WebKit
pushd third_party/WebKit
echo WebKit: fetch
if ! git fetch origin; then
    exit
fi

git remote prune origin
if test -d .git/svn; then
git svn fetch
fi

if test `git branch | grep ^* | cut -c 3-` = master; then
  echo WebKit: reset --hard master to origin/master
  if ! git reset --hard origin/trunk; then
    exit
  fi
else
  echo WebKit: force branch master to origin/master
  if ! git branch -f master origin/master; then
    exit
  fi
fi


popd

echo WebKit: update gclient to deps
./tools/sync-webkit-git.py

# checkout gclient on webkit
pushd third_party/WebKit
echo WebKit: checkout gclient
git checkout gclient
popd

# angle
if test -e ./third_party/angle/.git; then
  echo angle is git
  pushd ./third_party/angle

  if ! git checkout master; then
    echo Could not checkout master
    exit
  fi
  git svn rebase

  popd
fi

echo gclient sync
if test "x$OSTYPE" != "xcygwin"; then
gclient sync -j16
else
gclient sync
fi


# all done :)
echo You still need to restore and rebase your active branch
popd
